

==================================================
File: D:/my_fort/.env.local
==================================================
EMAIL_APP_PASSWORD=Pugalragu@1234



==================================================
File: D:/my_fort/.eslintrc.json
==================================================
{
    "extends": "next/core-web-vitals"
  }
  
  

==================================================
File: D:/my_fort/.gitignore
==================================================
# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts



==================================================
File: D:/my_fort/package.json
==================================================
{
    "name": "web3-portfolio",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "dev": "next dev",
        "build": "next build",
        "start": "next start",
        "lint": "next lint"
    },
    "dependencies": {
        "framer-motion": "^10.12.16",
        "lucide-react": "^0.241.0",
        "next": "^15.1.2",
        "react": "18.2.0",
        "react-dom": "18.2.0"
    },
    "devDependencies": {
        "@types/node": "20.3.1",
        "@types/react": "18.2.14",
        "@types/react-dom": "18.2.6",
        "autoprefixer": "10.4.14",
        "eslint": "8.43.0",
        "eslint-config-next": "13.4.7",
        "postcss": "^8.4.49",
        "tailwindcss": "3.3.2",
        "typescript": "5.1.3"
    }
}


==================================================
File: D:/my_fort/postcss.config.js
==================================================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}



==================================================
File: D:/my_fort/tailwind.config.js
==================================================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          DEFAULT: '#3B82F6',
          foreground: '#ffffff',
        },
        secondary: {
          DEFAULT: '#8B5CF6',
          foreground: '#ffffff',
        },
        accent: {
          DEFAULT: '#F43F5E',
          foreground: '#ffffff',
        },
        background: '#0F172A',
      },
      fontFamily: {
        sans: ['Inter', 'sans-serif'],
        mono: ['JetBrains Mono', 'monospace'],
      },
    },
  },
  plugins: [],
}



==================================================
File: D:/my_fort/next.config.js
==================================================
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  experimental: {
    optimizeCss: true,
  },
  webpack: (config, { isServer }) => {
    if (!isServer) {
      config.optimization.splitChunks.cacheGroups = {
        ...config.optimization.splitChunks.cacheGroups,
        styles: {
          name: 'styles',
          test: /\.css$/,
          chunks: 'all',
          enforce: true,
        },
      };
    }
    return config;
  },
}

module.exports = nextConfig



==================================================
File: D:/my_fort/src/app/globals.css
==================================================
/* eslint-disable */
@tailwind base;
@tailwind components;
@tailwind utilities;
/* eslint-enable */

:root {
  --primary: #3B82F6;
  --secondary: #8B5CF6;
  --background: #111827;
  --text: #F3F4F6;
}

body {
  font-family: 'Inter', sans-serif;
  background-color: var(--background);
  color: var(--text);
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'JetBrains Mono', monospace;
}

.gradient-text {
  background: linear-gradient(45deg, var(--primary), var(--secondary));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.icon-button {
  @apply p-2 rounded-lg transition-all duration-300 hover:bg-blue-500/20 hover:text-blue-400;
}

.animated-background {
  @apply fixed inset-0 -z-10 opacity-50;
}

.section-container {
  @apply min-h-screen flex items-center justify-center py-20;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.float-animation {
  animation: float 6s ease-in-out infinite;
}

/* Scrollbar Styles */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: var(--background);
}

::-webkit-scrollbar-thumb {
  background: var(--primary);
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--secondary);
}

/* Smooth Scrolling */
html {
  scroll-behavior: smooth;
}

/* Focus Styles */
*:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* Responsive Typography */
html {
  font-size: 16px;
}

@media (min-width: 640px) {
  html {
    font-size: 18px;
  }
}

@media (min-width: 1024px) {
  html {
    font-size: 20px;
  }
}

/* Additional styles for improved spacing and visual appeal */
.container {
  @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
}

section {
  @apply py-20 min-h-screen flex flex-col justify-center;
}

h2 {
  @apply text-3xl sm:text-4xl font-bold mb-8 text-center;
}

.card {
  @apply bg-gray-800 rounded-lg shadow-lg p-6 transition-all duration-300 hover:shadow-xl;
}

.button {
  @apply px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors;
}

/* Improved spacing for navigation */
.nav-item {
  @apply mx-2 py-2 px-3 rounded-md transition-colors;
}

/* Enhanced visual appeal for skill tags */
.skill-tag {
  @apply inline-block bg-gray-700 text-sm rounded-full px-3 py-1 m-1;
}

/* Project card enhancements */
.project-card {
  @apply flex flex-col h-full;
}

.project-card-body {
  @apply flex-grow;
}

/* Publication styling */
.publication {
  @apply border-l-4 border-blue-500 pl-4 my-4;
}

/* Contact form improvements */
.form-input {
  @apply w-full px-3 py-2 bg-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    @apply px-4;
  }
  
  h2 {
    @apply text-2xl sm:text-3xl;
  }
}

/* Animation classes */
.fade-in {
  @apply transition-opacity duration-500 ease-in-out;
}

.slide-up {
  @apply transition-all duration-500 ease-in-out transform;
}

/* Additional utility classes */
.text-gradient {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-600;
}

.glassmorphism {
  @apply bg-white bg-opacity-10 backdrop-filter backdrop-blur-lg;
}

/* Ensure proper spacing between sections */
section + section {
  @apply mt-32;
}

/* Enhance footer styling */
footer {
  @apply mt-20 py-8 border-t border-gray-800;
}

/* Mobile-friendly adjustments */
@media (max-width: 640px) {
  .nav-item {
    @apply mx-1 py-1 px-2;
  }

  .skill-tag {
    @apply text-xs px-2 py-0.5;
  }

  .project-card {
    @apply flex-col;
  }
}



==================================================
File: D:/my_fort/src/app/layout.jsx
==================================================
import './globals.css'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Pugazholi R - Web3 Portfolio',
  description: 'Web3 Developer | Blockchain Enthusiast | AI Researcher',
}

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  )
}



==================================================
File: D:/my_fort/src/app/page.jsx
==================================================
'use client'

import React, { useState, useEffect, useRef } from 'react'
import { motion, useScroll, useSpring } from 'framer-motion'
import Header from '../components/Header'
import Navigation from '../components/Navigation'
import AnimatedBackground from '../components/AnimatedBackground'
import Home from '../components/Home'
import About from '../components/About'
import Skills from '../components/Skills'
import Projects from '../components/Projects'
import Publications from '../components/Publications'
import Learning from '../components/Learning'
import Contact from '../components/Contact'
import Footer from '../components/Footer'

export default function Page() {
  const [currentSection, setCurrentSection] = useState('home')
  const { scrollYProgress } = useScroll()
  const scaleX = useSpring(scrollYProgress, {
    stiffness: 100,
    damping: 30,
    restDelta: 0.001
  })

  const sectionRefs = {
    home: useRef(null),
    about: useRef(null),
    skills: useRef(null),
    projects: useRef(null),
    publications: useRef(null),
    learning: useRef(null),
    contact: useRef(null),
  }

  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + window.innerHeight / 2

      for (const [section, ref] of Object.entries(sectionRefs)) {
        if (ref.current && ref.current.offsetTop <= scrollPosition && ref.current.offsetTop + ref.current.offsetHeight > scrollPosition) {
          setCurrentSection(section)
          break
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  const handleNavigation = (section) => {
    sectionRefs[section].current.scrollIntoView({ behavior: 'smooth' })
  }

  return (
    <div className="relative min-h-screen bg-transparent text-white overflow-hidden">
      <AnimatedBackground />
      <Header />
      <Navigation currentSection={currentSection} onNavigate={handleNavigation} />
      <motion.div
        className="fixed top-0 left-0 right-0 h-1 bg-blue-500 transform-none z-50"
        style={{ scaleX }}
      />
      <main className="relative z-10 container mx-auto px-4 py-20 space-y-32 sm:space-y-40 md:space-y-48 lg:space-y-56">
        <section ref={sectionRefs.home} id="home"><Home /></section>
        <section ref={sectionRefs.about} id="about"><About /></section>
        <section ref={sectionRefs.skills} id="skills"><Skills /></section>
        <section ref={sectionRefs.projects} id="projects"><Projects /></section>
        <section ref={sectionRefs.publications} id="publications"><Publications /></section>
        <section ref={sectionRefs.learning} id="learning"><Learning /></section>
        <section ref={sectionRefs.contact} id="contact"><Contact /></section>
      </main>
      <Footer />
    </div>
  )
}



==================================================
File: D:/my_fort/src/components/About.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';

const About = () => {
  return (
    <section id="about" className="min-h-screen flex items-center justify-center py-20">
      <motion.div
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="max-w-3xl mx-auto text-center"
      >
        <h2 className="text-4xl font-bold mb-8">About Me</h2>
        <motion.p
          className="text-lg mb-6"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.8 }}
        >
          I'm a passionate Web3 developer and blockchain enthusiast with a strong foundation in computer science. Currently pursuing my Bachelor of Technology in Computer Science and Engineering at SRM Institute of Science and Technology, I'm dedicated to pushing the boundaries of decentralized technologies and creating innovative solutions.
        </motion.p>
        <motion.p
          className="text-lg mb-6"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4, duration: 0.8 }}
        >
          My journey in the world of technology has led me to explore various aspects of software development, with a particular focus on blockchain technology, smart contracts, and decentralized applications (dApps). I'm constantly learning and adapting to the rapidly evolving landscape of Web3 and AI technologies.
        </motion.p>
        <motion.div
          className="bg-gray-800 p-6 rounded-lg"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6, duration: 0.8 }}
        >
          <h3 className="text-2xl font-bold mb-4">Education</h3>
          <p className="text-lg">
            Bachelor of Technology (B.Tech.) in Computer Science and Engineering<br />
            SRM Institute of Science and Technology, Chennai<br />
            September 2020 - October 2024
          </p>
        </motion.div>
      </motion.div>
    </section>
  );
};

export default About;



==================================================
File: D:/my_fort/src/components/AnimatedBackground.jsx
==================================================
import React from 'react';
import { motion, useScroll, useTransform } from 'framer-motion';
import styles from './AnimatedBackground.module.css';

const AnimatedBackground = () => {
  const { scrollYProgress } = useScroll();
  
  const y1 = useTransform(scrollYProgress, [0, 1], ['0%', '50%']);
  const y2 = useTransform(scrollYProgress, [0, 1], ['0%', '-50%']);
  const rotate1 = useTransform(scrollYProgress, [0, 1], [0, 360]);
  const rotate2 = useTransform(scrollYProgress, [0, 1], [360, 0]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [1, 1.2, 1]);
  const opacity = useTransform(scrollYProgress, [0, 0.5, 1], [0.3, 0.5, 0.8]);

  return (
    <div className={styles.container}>
      <motion.div 
        className={styles.layer1}
        style={{ y: y1, rotate: rotate1, scale }}
      />
      <motion.div 
        className={styles.layer2}
        style={{ y: y2, rotate: rotate2, scale }}
      />
      <motion.div 
        className={styles.layer3}
        style={{ opacity }}
      />
    </div>
  );
};

export default AnimatedBackground;



==================================================
File: D:/my_fort/src/components/AnimatedBackground.module.css
==================================================
.container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    overflow: hidden;
    background-color: #0f172a;
  }
  
  .layer1,
  .layer2,
  .layer3 {
    position: absolute;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    background-size: 200% 200%;
    opacity: 0.3;
    filter: blur(50px);
  }
  
  .layer1 {
    background-image: radial-gradient(circle at 20% 20%, rgba(59, 130, 246, 0.5) 0%, transparent 70%),
                      radial-gradient(circle at 80% 80%, rgba(236, 72, 153, 0.5) 0%, transparent 70%);
    animation: pulse 15s infinite alternate;
  }
  
  .layer2 {
    background-image: radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.5) 0%, transparent 70%),
                      radial-gradient(circle at 20% 80%, rgba(99, 102, 241, 0.5) 0%, transparent 70%);
    animation: pulse 20s infinite alternate-reverse;
  }
  
  .layer3 {
    background: linear-gradient(45deg, 
      rgba(59, 130, 246, 0.2),
      rgba(139, 92, 246, 0.2),
      rgba(236, 72, 153, 0.2),
      rgba(99, 102, 241, 0.2)
    );
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }
  
  @keyframes gradientShift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
  
  

==================================================
File: D:/my_fort/src/components/Contact.jsx
==================================================
'use client';

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Loader2, Send, CheckCircle, AlertCircle } from 'lucide-react';

const Contact = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });
  const [status, setStatus] = useState({
    loading: false,
    success: false,
    error: null
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus({ loading: true, success: false, error: null });

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (data.success) {
        setStatus({ loading: false, success: true, error: null });
        setFormData({ name: '', email: '', message: '' });
        // Reset success message after 5 seconds
        setTimeout(() => {
          setStatus(prev => ({ ...prev, success: false }));
        }, 5000);
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      setStatus({
        loading: false,
        success: false,
        error: error.message
      });
      // Reset error message after 5 seconds
      setTimeout(() => {
        setStatus(prev => ({ ...prev, error: null }));
      }, 5000);
    }
  };

  return (
    <section id="contact" className="min-h-screen flex items-center justify-center py-20">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        viewport={{ once: true }}
        className="w-full max-w-lg px-4"
      >
        <motion.h2 
          className="text-4xl font-bold mb-8 text-center bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-600"
          initial={{ opacity: 0, y: -20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          viewport={{ once: true }}
        >
          Get in Touch
        </motion.h2>
        
        <motion.form 
          onSubmit={handleSubmit} 
          className="space-y-6 backdrop-blur-sm bg-white/5 p-8 rounded-xl border border-white/10"
          initial={{ opacity: 0, scale: 0.95 }}
          whileInView={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.3 }}
          viewport={{ once: true }}
        >
          <div>
            <label htmlFor="name" className="block text-sm font-medium mb-2 text-gray-200">
              Name
            </label>
            <motion.input
              whileFocus={{ scale: 1.01 }}
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
              className="w-full px-4 py-3 bg-gray-800/50 rounded-lg border border-gray-700 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none transition-all duration-300"
              autoComplete="name"
            />
          </div>

          <div>
            <label htmlFor="email" className="block text-sm font-medium mb-2 text-gray-200">
              Email
            </label>
            <motion.input
              whileFocus={{ scale: 1.01 }}
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
              className="w-full px-4 py-3 bg-gray-800/50 rounded-lg border border-gray-700 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none transition-all duration-300"
              autoComplete="email"
            />
          </div>

          <div>
            <label htmlFor="message" className="block text-sm font-medium mb-2 text-gray-200">
              Message
            </label>
            <motion.textarea
              whileFocus={{ scale: 1.01 }}
              id="message"
              name="message"
              value={formData.message}
              onChange={handleChange}
              required
              rows={5}
              className="w-full px-4 py-3 bg-gray-800/50 rounded-lg border border-gray-700 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none transition-all duration-300 resize-none"
            />
          </div>

          <motion.button
            type="submit"
            disabled={status.loading}
            className="w-full px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg font-medium 
                     hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-blue-500 
                     focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300
                     flex items-center justify-center space-x-2"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
          >
            {status.loading ? (
              <>
                <Loader2 className="animate-spin" size={20} />
                <span>Sending...</span>
              </>
            ) : (
              <>
                <Send size={20} />
                <span>Send Message</span>
              </>
            )}
          </motion.button>
        </motion.form>

        <AnimatePresence>
          {status.success && (
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -10 }}
              className="mt-4 p-4 bg-green-500/20 backdrop-blur-sm border border-green-500 rounded-lg flex items-center space-x-2"
            >
              <CheckCircle className="text-green-500" size={20} />
              <span className="text-green-200">Message sent successfully!</span>
            </motion.div>
          )}

          {status.error && (
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -10 }}
              className="mt-4 p-4 bg-red-500/20 backdrop-blur-sm border border-red-500 rounded-lg flex items-center space-x-2"
            >
              <AlertCircle className="text-red-500" size={20} />
              <span className="text-red-200">{status.error}</span>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>
    </section>
  );
};

export default Contact;



==================================================
File: D:/my_fort/src/components/Footer.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';
import { Github, Linkedin, Mail } from 'lucide-react';

const Footer = () => {
  const socialLinks = [
    {
      icon: Github,
      href: 'https://github.com/pugazholi-r',
      label: 'GitHub Profile',
      color: 'hover:text-gray-400'
    },
    {
      icon: Linkedin,
      href: 'https://linkedin.com/in/pugazholi-r-aa388426a',
      label: 'LinkedIn Profile',
      color: 'hover:text-blue-400'
    },
    {
      icon: Mail,
      href: 'mailto:Pugazhragu226@gmail.com',
      label: 'Send Email',
      color: 'hover:text-green-400'
    }
  ];

  return (
    <footer className="bg-gray-900/50 backdrop-blur-sm py-6 mt-20">
      <div className="container mx-auto px-4">
        <div className="flex flex-col md:flex-row justify-between items-center gap-4">
          <div className="text-sm text-gray-400">
            © {new Date().getFullYear()} Pugazholi R. All rights reserved.
          </div>
          <div className="flex items-center gap-6">
            {socialLinks.map((social) => (
              <motion.a
                key={social.href}
                href={social.href}
                target="_blank"
                rel="noopener noreferrer"
                aria-label={social.label}
                className={`text-gray-300 transition-colors ${social.color}`}
                whileHover={{ scale: 1.2 }}
                whileTap={{ scale: 0.9 }}
              >
                <social.icon className="w-6 h-6 sm:w-5 sm:h-5" />
              </motion.a>
            ))}
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;



==================================================
File: D:/my_fort/src/components/Header.jsx
==================================================
import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';

const Header = () => {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 50);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <motion.header
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      transition={{ type: 'spring', stiffness: 100 }}
      className={`fixed w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-black bg-opacity-80 backdrop-blur-md py-2' : 'bg-transparent py-4'
      }`}
    >
      <div className="container mx-auto px-4 flex justify-between items-center">
        <motion.h1
          className="text-3xl font-bold"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.2 }}
        >
          <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-600">
            Pugazholi R
          </span>
        </motion.h1>
        <nav>
          <ul className="flex space-x-6">
            {['Home', 'About', 'Skills', 'Projects', 'Publications', 'Learning', 'Contact'].map((item) => (
              <motion.li
                key={item}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                <a
                  href={`#${item.toLowerCase()}`}
                  className="text-white hover:text-blue-400 transition-colors"
                >
                  {item}
                </a>
              </motion.li>
            ))}
          </ul>
        </nav>
      </div>
    </motion.header>
  );
};

export default Header;



==================================================
File: D:/my_fort/src/components/Home.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';
import { GitlabIcon as GitHub, Linkedin, Mail } from 'lucide-react';

const Home = () => {
  return (
    <section id="home" className="min-h-screen flex items-center justify-center">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="text-center"
      >
        <motion.h1
          className="text-6xl font-bold mb-4"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.8 }}
        >
          <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-600">
            Pugazholi R
          </span>
        </motion.h1>
        <motion.p
          className="text-xl mb-8"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4, duration: 0.8 }}
        >
          Web3 Developer | Blockchain Enthusiast | AI Researcher
        </motion.p>
        <motion.div
          className="flex justify-center space-x-6"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6, duration: 0.8 }}
        >
          <a
            href="https://github.com/pugazholi-r"
            target="_blank"
            rel="noopener noreferrer"
            className="text-white hover:text-blue-400 transition-colors"
          >
            <GitHub size={24} />
          </a>
          <a
            href="https://linkedin.com/in/pugazholi-r-aa388426a"
            target="_blank"
            rel="noopener noreferrer"
            className="text-white hover:text-blue-400 transition-colors"
          >
            <Linkedin size={24} />
          </a>
          <a
            href="mailto:Pugazhragu226@gmail.com"
            className="text-white hover:text-blue-400 transition-colors"
          >
            <Mail size={24} />
          </a>
        </motion.div>
      </motion.div>
    </section>
  );
};

export default Home;



==================================================
File: D:/my_fort/src/components/Learning.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';

const Learning = () => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="max-w-3xl mx-auto"
    >
      <h2 className="text-3xl font-bold mb-6">Skills Enhancement & Learning</h2>
      <ul className="list-disc list-inside space-y-4">
        <motion.li
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5, delay: 0.1 }}
        >
          Undertook a one-month in-office training at Bala Aatral Solutions Pvt. Ltd., VR|AR|MR|XR software solutions.
        </motion.li>
        <motion.li
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5, delay: 0.2 }}
        >
          Gained foundational Unity Engine skills and ventured into game development and the metaverse domain.
        </motion.li>
        <motion.li
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5, delay: 0.3 }}
        >
          Cultivated practical skills in creating immersive virtual reality experiences, enhancing learning engagement and XR performance.
        </motion.li>
      </ul>
    </motion.div>
  );
};

export default Learning;



==================================================
File: D:/my_fort/src/components/Navigation.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';
import { Home, User, Code2, FolderGit2, BookOpen, GraduationCap, Mail } from 'lucide-react';

const Navigation = ({ currentSection, onNavigate }) => {
  const navItems = [
    { id: 'home', icon: Home, label: 'Home' },
    { id: 'about', icon: User, label: 'About' },
    { id: 'skills', icon: Code2, label: 'Skills' },
    { id: 'projects', icon: FolderGit2, label: 'Projects' },
    { id: 'publications', icon: BookOpen, label: 'Publications' },
    { id: 'learning', icon: GraduationCap, label: 'Learning' },
    { id: 'contact', icon: Mail, label: 'Contact' },
  ];

  return (
    <nav className="fixed right-8 top-1/2 transform -translate-y-1/2 z-40">
      <ul className="space-y-4">
        {navItems.map(({ id, icon: Icon, label }) => (
          <motion.li
            key={id}
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.95 }}
          >
            <button
              onClick={() => onNavigate(id)}
              className={`icon-button group relative ${
                currentSection === id ? 'text-blue-400' : 'text-white'
              }`}
              aria-label={label}
            >
              <Icon className="w-6 h-6" />
              <span className="absolute right-full mr-2 px-2 py-1 bg-black bg-opacity-80 rounded-md opacity-0 group-hover:opacity-100 transition-opacity">
                {label}
              </span>
            </button>
          </motion.li>
        ))}
      </ul>
    </nav>
  );
};

export default Navigation;



==================================================
File: D:/my_fort/src/components/Projects.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';

const projectsData = [
  {
    title: 'Penmind AI',
    date: 'Dec 2024 - Present',
    description: 'This project implements an advanced handwriting recognition system using machine learning techniques. It provides a web interface for users to upload images of handwritten text and receive digitized versions of the content.',
    features: [
      'Image upload for handwritten text recognition',
      'Real-time text recognition using a CNN-LSTM model and ensemble learning approach',
      'Export options for recognized text (TXT, DOCX, PDF)',
      'Responsive web interface built with React',
      'FastAPI backend for efficient processing',
      'Dockerized deployment for easy setup',
    ],
    skills: ['React.js', 'TensorFlow', 'FastAPI', 'Keras', 'Tailwind CSS'],
  },
  {
    title: 'Blockcertify',
    date: 'Jan 2024 - Jun 2024',
    description: 'Blockchain-based academic certificate verification system associated with SRM University.',
    features: [
      'Proficiency in decentralized blockchain platform such as Ethereum',
      'Knowledge of cryptographic techniques such as secure hashing algorithm',
      'Expertise in leveraging token standards for tokenizing and securing academic credentials',
      'Skilled in designing and deploying blockchain-based systems that ensure transparent, tamper-proof verification processes',
      'Enhancing trust and efficiency in academic credential management',
    ],
    skills: ['Blockchain', 'Tailwind CSS', 'CSS', 'Python', 'Flask', 'HTML5'],
  },
];

const Projects = () => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="max-w-4xl mx-auto"
    >
      <h2 className="text-3xl font-bold mb-6">Projects</h2>
      {projectsData.map((project, index) => (
        <motion.div
          key={index}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: index * 0.1 }}
          className="bg-gray-800 p-6 rounded-lg mb-6"
        >
          <h3 className="text-2xl font-bold mb-2">{project.title}</h3>
          <p className="text-gray-400 mb-4">{project.date}</p>
          <p className="mb-4">{project.description}</p>
          <h4 className="text-xl font-bold mb-2">Features:</h4>
          <ul className="list-disc list-inside mb-4">
            {project.features.map((feature, featureIndex) => (
              <li key={featureIndex}>{feature}</li>
            ))}
          </ul>
          <h4 className="text-xl font-bold mb-2">Skills:</h4>
          <div className="flex flex-wrap gap-2">
            {project.skills.map((skill, skillIndex) => (
              <span key={skillIndex} className="bg-gray-700 px-3 py-1 rounded-full text-sm">
                {skill}
              </span>
            ))}
          </div>
        </motion.div>
      ))}
    </motion.div>
  );
};

export default Projects;



==================================================
File: D:/my_fort/src/components/Publications.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';

const Publications = () => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="max-w-3xl mx-auto"
    >
      <h2 className="text-3xl font-bold mb-6">Publications</h2>
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.1 }}
        className="bg-gray-800 p-6 rounded-lg"
      >
        <h3 className="text-2xl font-bold mb-2">A Systematic Literature Review on Blockchain-Based Systems for Academic Certificate Verification</h3>
        <p className="mb-4">Published in the International Journal of Novel Research and Development (IJNRD). This paper explores various blockchain-based solutions for academic certificate verification, highlighting their advantages and challenges.</p>
        <p className="mb-2">Paper ID: IJNRD2405306</p>
        <a href="https://www.ijnrd.org/papers/IJNRD2405306.pdf" target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:text-blue-300">Read Paper</a>
      </motion.div>
    </motion.div>
  );
};

export default Publications;



==================================================
File: D:/my_fort/src/components/Skills.jsx
==================================================
import React from 'react';
import { motion } from 'framer-motion';

const skillsData = [
  { category: 'Blockchain', skills: ['Solidity', 'Ethereum', 'Smart Contracts', 'Web3.js', 'Truffle', 'Hardhat']},
  { category: 'Frontend Development', skills: ['React', 'Next.js', 'JavaScript', 'Tailwind CSS', 'Three.js'] },
  { category: 'Backend Development', skills: ['Node.js', 'Express', 'Python', 'Django', 'FastAPI'] },
  { category: 'Databases', skills: ['MongoDB', 'PostgreSQL', 'MySQL', 'Redis'] },
  { category: 'DevOps & Tools', skills: ['Git', 'Docker', 'AWS', 'CI/CD', 'Agile Methodologies'] },
  { category: 'AI & Machine Learning', skills: ['TensorFlow', 'PyTorch', 'Scikit-learn', 'Natural Language Processing'] },
];

const Skills = () => {
  return (
    <section id="skills" className="min-h-screen flex items-center justify-center py-20">
      <div className="max-w-5xl mx-auto">
        <motion.h2
          className="text-4xl font-bold mb-12 text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          Skills & Technologies
        </motion.h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {skillsData.map((category, index) => (
            <motion.div
              key={category.category}
              className="bg-gray-800 p-6 rounded-lg hover:shadow-lg transition-all duration-300"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1, duration: 0.8 }}
              whileHover={{ scale: 1.05, boxShadow: "0 0 25px rgba(59, 130, 246, 0.5)" }}
            >
              <h3 className="text-2xl font-bold mb-4">{category.category}</h3>
              <ul className="list-disc list-inside">
                {category.skills.map((skill) => (
                  <li key={skill} className="mb-2">{skill}</li>
                ))}
              </ul>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Skills;



==================================================
File: D:/my_fort/src/hooks/useParallax.js
==================================================
import { useEffect, useState } from 'react';

export const useParallax = (speed = 0.5) => {
  const [offset, setOffset] = useState(0);

  useEffect(() => {
    const handleScroll = () => {
      setOffset(window.pageYOffset);
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  return [offset * speed];
};



==================================================
File: D:/my_fort/.vscode/settings.json
==================================================
{
    "css.validate": false,
    "less.validate": false,
    "scss.validate": false,
    "stylelint.enable": true,
    "stylelint.validate": ["css", "scss"],
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": true
    }
  }
  
  

==================================================
File: D:/my_fort/src/app/api/contact/route.js
==================================================
import { NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

export async function POST(req) {
  try {
    const { name, email, message } = await req.json();

    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: 'pugazhragu226@gmail.com', // Your email
        pass: process.env.EMAIL_APP_PASSWORD // Generate from Google Account settings
      }
    });

    const mailOptions = {
      from: email,
      to: 'pugazhragu226@gmail.com',
      subject: `Portfolio Contact from ${name}`,
      html: `
        <div style="padding: 20px; background: #f5f5f5; border-radius: 10px;">
          <h2 style="color: #333;">New Contact Message</h2>
          <p><strong>From:</strong> ${name}</p>
          <p><strong>Email:</strong> ${email}</p>
          <p><strong>Message:</strong></p>
          <div style="padding: 15px; background: white; border-radius: 5px;">
            ${message.replace(/\n/g, '<br>')}
          </div>
        </div>
      `
    };

    await transporter.sendMail(mailOptions);

    return NextResponse.json({ 
      success: true, 
      message: 'Message sent successfully!' 
    });
  } catch (error) {
    console.error('Contact form error:', error);
    return NextResponse.json(
      { success: false, message: 'Failed to send message. Please try again.' },
      { status: 500 }
    );
  }
}

